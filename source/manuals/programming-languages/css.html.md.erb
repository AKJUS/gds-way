---
title: CSS coding style
last_reviewed_on: 2023-04-03
review_in: 12 months
owner_slack: '#frontend'
---

# <%= current_page.data.title %>

## Contents

* [Linting](#linting)
* [Whitespace](#whitespace)
* [Spacing](#spacing)
* [Vendor prefixing](#vendor-prefixing)
* [Sass nesting](#sass-nesting)

## Linting

Your project should conform to GDS CSS/Sass linting rules, these are published as a [stylelint](https://stylelint.io) configuration: [stylint-config-gds](https://github.com/alphagov/stylelint-config-gds).

## Whitespace

Use soft tabs with a 2 space indent. This follows the conventions we use in our other projects.

## Spacing

You should use the [GOV.UK Design System spacing scale](https://design-system.service.gov.uk/styles/spacing/).

### Use with deprecated libraries

If your project is not using the GOV.UK Design System, you should use pixel values in multiples of `5px`.

### Use `rem` units for font size, but not for spacing

Use `rem` units for font sizing wherever possible. This allows users to increase the size of the text on a page by adjusting the font size in their browser settings.

Avoid using `rem` units for spacing - use `px` instead.

## Vendor prefixing

When using CSS features which require vendor prefixes use [autoprefixer](https://github.com/postcss/autoprefixer).

You should [configure autoprefixer](https://github.com/postcss/autoprefixer#browsers) to target [our supported browsers](https://www.gov.uk/service-manual/technology/designing-for-different-browsers-and-devices#browsers-to-test-in).

## Sass nesting

Sass nesting should be avoided where possible.

Over use of nesting can make searching for selectors difficult and can hide complicated CSS that should be simplified.

Exceptions to this include pseudo selectors and JavaScript enabled classes.

```scss
.accordion {
  // styles when the accordion is not enhanced here
}
.js-enabled {
  .accordion {
    // styles when the accordion is enhanced here

    &:focus {
      // ...
    }
  }
}
```
