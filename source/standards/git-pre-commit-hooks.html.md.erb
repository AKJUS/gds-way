---
title: Git pre-commit hooks
last_reviewed_on: 2019-12-17
review_in: 6 months
---

# <%= current_page.data.title %>

[Git pre-commit](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks) hooks are scripts which check the code you commit to GitHub. You should use pre-commit hooks to improve code quality and follow [secure software development guidelines](https://www.ncsc.gov.uk/collection/developers-collection).

You can use these scripts to:

* make sure you have not left secrets such as private keys and API tokens in your code
* add linting and formatting to your code
* check for vulnerable code (for example, evals)
* validate files
* encourage good practices and standardise workflow

If you do not already have a way to manage pre-commit hooks, consider using the [pre-commit framework](https://pre-commit.com/).


## detect-secrets

You must not:

- use GitHub to manage or store secrets
- push any secrets to GitHub

Teams should include a secrets detection script as a pre-commit hook on their repositories to avoid accidentally pushing secrets to GitHub.

Cyber Security tested various pre-commit hooks by putting secrets in repos and pushing them with the pre-commit hooks running. [detect-secrets](https://github.com/Yelp/detect-secrets) is the one we recommend, as it caught the most secrets.

To install pre-commit hooks with ‘detect-secrets’, refer to the [guidance from the Cyber Security team](https://github.com/alphagov/gds-pre-commit/). The Cyber team are currently in the process of reviewing this documentation so developers and engineers can implement pre-commit hooks globally to ensure they don’t have to install pre-commit hooks per repository.

The repository also includes an [example yaml config](https://raw.githubusercontent.com/alphagov/gds-pre-commit/master/.gds/.pre-commit-config.yaml).

If you need any help following the guidance, please [contact the Cyber Security Team on Slack](https://gds.slack.com/archives/CCMPJKFDK).
