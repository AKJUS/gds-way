---
title: How to hos services
expires: 2018-05-01
---

# <%= current_page.data.title %>

<%= partial :expires %>

GDS follows the [Government Cloud First policy](https://www.gov.uk/guidance/government-cloud-first-policy) preferring Platform as a service (PaaS) and Infrastructure as a Service (IaaS) solutions over managing our own hardware.

At GDS teams can build new tools on a primary cloud platform, we prefer:

* systems built on a PaaS instead of on IaaS
* cloud suppliers that are well supported by common tools

## Choose your hosting solution

Your hosting solution should accommodate:

* service users who want highly scalable and available systems
* GDS administrators who want to manage their environments using automated tools

### Choose your cloud platform

GDS has selected the following cloud platforms:

* [GOV.UK Platform as a Service (PaaS)](https://cloud.service.gov.uk) which manages the deployment of your apps and services
* [Amazon Web Services (AWS)](https://aws.amazon.com) which offers scalable computing, storage and deployment services

### Consider switching costs

AWS has a large number of different services available. Some are common to many providers, such as compute and file storage. Others are more specific to AWS itself, the services you choose may impact switching costs.

#### When using common AWS services

It's fine to use the core features of AWS that are common with the biggest competitors, for example:

  * [Amazon Elastic Compute Cloud (Amazon EC2)](https://aws.amazon.com/ec2/)
  * [Networking Products with AWS](https://aws.amazon.com/products/networking/) - load balancing and network segregation
  * [Amazon Elastic Block Store (EBS)](https://aws.amazon.com/ebs/) and [Amazon S3](https://aws.amazon.com/s3/) - file storage
  * [Amazon Relational Database Service (RDS)](https://aws.amazon.com/rds/) - hosted databases

#### When using less common AWS services

Using a less common non-AWS service may make switching to a different hosting solution more expensive.

For example, migrating a web API service to another provider would be harder if the API was built using [Amazon API Gateway](https://aws.amazon.com/api-gateway/) instead of as a traditional web application and deployed to EC2.

AWS Services with the potential to raise switching costs include:

  * [Amazon API Gateway](https://aws.amazon.com/api-gateway/)
  * [AWS Directory Service for Microsoft Active Directory](https://aws.amazon.com/directoryservice/)
  * [Amazon CloudFront](https://aws.amazon.com/cloudfront/)
  * [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)
  * [AWS Lambda](https://aws.amazon.com/lambda/)
  * [Amazon Simple Notification Service (SNS)](https://aws.amazon.com/sns/)
  * [Amazon Simple Queue Service (SQS)](https://aws.amazon.com/sqs/)
