---
title: Managing user accounts with third party services
expires: 2018-04-01
---

# <%= current_page.data.title %>

<%= partial :expires %>

When developing a service at GDS, your team will often need to use
third-party services. To access these services, you will need some
sort of user account, this guidance explains how to manage
such accounts.

## Distinguishing between user accounts, individuals and credentials

In this guidance we distinguish between accounts, individuals and credentials by saying:

- an *account*  has an identifier such as a username or an email address
- an *individual* refers to a human being
- a set of *credentials* means a type of secret used to gain access
  to a user account, for example a password or secret access key

## Account management goals and principles

When managing account credentials there are certain goals and guiding principles we recommend you use.

### Account management goals

You should manage access to third party services by ensuring:

- the right people have access
- the wrong people do not have access
- when people leave GDS their access is revoked or expired
- you can identify who did what and when (audit)

The audit goal has varying importance depending on the context.

Technical limitations may prevent a full audit from being achieved, or may only provide a partial audit.

### Account management principles

To achieve the above goals, there are 3 principles we recommend you follow by:

- minimising the number of secrets an individual needs to keep, reduces the number of credentials to revoke when someone leaves GDS (passwords are particularly problematic secrets, other forms of secrets such as secret access keys or OAuth tokens are more easily rotated)
- no individual should ever have to use credentials associated with another individual as this counters the audit goal
- there should be no need to share credentials between service teams, this creates problems for audit and for knowing when credentials should be revoked (technical limitations may mean this is sometimes unavoidable)

## Creating accounts for shared third-party services

Our recommendations in this section depend whether a third-party service natively supports organisation or team level access.

### Services supporting organisation accounts

For services supporting organisation accounts (for example, the use of alphagov on github) you should use them to ensure only the appropriate individuals on your team have access.

When creating accounts, we recommend you:

- create separate accounts for each individual rather than sharing
  credentials
- use a single-sign-on provider over creating an account with a
  separate username and password

Use G Suite as a single sign-on provider over any other provider as G Suite is a core part of the GDS leaver's process, so we are confident this will be revoked when somebody leaves.

Sometimes GitHub may be preferable as sign-on provider for services that can use GitHubâ€™s team structure to manage permissions. For example, Travis CI does this.

You should ensure you have a documented process for removing individual's access when they leave GDS.

If you use G Suite an individual's access will be revoked when their G Suite access is revoked. However, you may still wish to clean up the individual's account with the third-party service, for example Logit.

### Services only providing individual accounts

For services which don't support organisation accounts, there's no
choice other than sharing sign-on credentials.

This creates several risks:

- it's not always easy to know who has access to a service,
  particularly if it's accessed occasionally
- if the last person with access leaves GDS, we can lose access to it altogether

To reduce these risks, we recommend:

- creating an account using a Google Group email address rather than an individual email address, this avoids losing access to the account when people leave (see Shared Google Groups)
- storing passwords in your team's shared credential store
- using two-factor authentication
- ensuring you have a documented process for removing individual's access to, the Google Group, credential store and for rotating credentials including any API keys

#### Shared Google Groups

When using shared Google Groups you must ensure:

- your group receives emails from outside of GDS by
  setting 'permission to post' to 'Public'
- only users with access to a service are able to view posts by
  setting 'permission to view topics' to 'all members of the group'

## Recommendations for specific third-party services

There are some recommendations for specific third-party services you should consider.

### GitHub

When using Github you must **use separate accounts per individual**.

Individuals have the option of using their existing personal GitHub accounts when they join GDS.

Each GDS team should have someone (usually a tech lead) who's an owner and can grant/revoke access to their repositories.

### Logit

To access Logit you need to use Google Apps Marketplace, this is the
only available option.
